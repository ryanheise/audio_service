// Mocks generated by Mockito 5.0.10 from annotations
// in audio_service_platform_interface/test/method_channel_audio_service_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:audio_service_platform_interface/audio_service_platform_interface.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: comment_references
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeGetChildrenResponse extends _i1.Fake
    implements _i2.GetChildrenResponse {}

class _FakeGetMediaItemResponse extends _i1.Fake
    implements _i2.GetMediaItemResponse {}

class _FakeSearchResponse extends _i1.Fake implements _i2.SearchResponse {}

/// A class which mocks [AudioHandlerCallbacks].
///
/// See the documentation for Mockito's code generation for more information.
class MockAudioHandlerCallbacks extends _i1.Mock
    implements _i2.AudioHandlerCallbacks {
  MockAudioHandlerCallbacks() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> prepare(_i2.PrepareRequest? request) =>
      (super.noSuchMethod(Invocation.method(#prepare, [request]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> prepareFromMediaId(_i2.PrepareFromMediaIdRequest? request) =>
      (super.noSuchMethod(Invocation.method(#prepareFromMediaId, [request]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> prepareFromSearch(_i2.PrepareFromSearchRequest? request) =>
      (super.noSuchMethod(Invocation.method(#prepareFromSearch, [request]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> prepareFromUri(_i2.PrepareFromUriRequest? request) =>
      (super.noSuchMethod(Invocation.method(#prepareFromUri, [request]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> play(_i2.PlayRequest? request) =>
      (super.noSuchMethod(Invocation.method(#play, [request]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> playFromMediaId(_i2.PlayFromMediaIdRequest? request) =>
      (super.noSuchMethod(Invocation.method(#playFromMediaId, [request]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> playFromSearch(_i2.PlayFromSearchRequest? request) =>
      (super.noSuchMethod(Invocation.method(#playFromSearch, [request]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> playFromUri(_i2.PlayFromUriRequest? request) =>
      (super.noSuchMethod(Invocation.method(#playFromUri, [request]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> playMediaItem(_i2.PlayMediaItemRequest? request) =>
      (super.noSuchMethod(Invocation.method(#playMediaItem, [request]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> pause(_i2.PauseRequest? request) =>
      (super.noSuchMethod(Invocation.method(#pause, [request]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> click(_i2.ClickRequest? request) =>
      (super.noSuchMethod(Invocation.method(#click, [request]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> stop(_i2.StopRequest? request) =>
      (super.noSuchMethod(Invocation.method(#stop, [request]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> addQueueItem(_i2.AddQueueItemRequest? request) =>
      (super.noSuchMethod(Invocation.method(#addQueueItem, [request]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> insertQueueItem(_i2.InsertQueueItemRequest? request) =>
      (super.noSuchMethod(Invocation.method(#insertQueueItem, [request]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> removeQueueItem(_i2.RemoveQueueItemRequest? request) =>
      (super.noSuchMethod(Invocation.method(#removeQueueItem, [request]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> removeQueueItemAt(_i2.RemoveQueueItemAtRequest? request) =>
      (super.noSuchMethod(Invocation.method(#removeQueueItemAt, [request]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> skipToNext(_i2.SkipToNextRequest? request) =>
      (super.noSuchMethod(Invocation.method(#skipToNext, [request]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> skipToPrevious(_i2.SkipToPreviousRequest? request) =>
      (super.noSuchMethod(Invocation.method(#skipToPrevious, [request]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> fastForward(_i2.FastForwardRequest? request) =>
      (super.noSuchMethod(Invocation.method(#fastForward, [request]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> rewind(_i2.RewindRequest? request) =>
      (super.noSuchMethod(Invocation.method(#rewind, [request]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> skipToQueueItem(_i2.SkipToQueueItemRequest? request) =>
      (super.noSuchMethod(Invocation.method(#skipToQueueItem, [request]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> seek(_i2.SeekRequest? request) =>
      (super.noSuchMethod(Invocation.method(#seek, [request]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> setRating(_i2.SetRatingRequest? request) =>
      (super.noSuchMethod(Invocation.method(#setRating, [request]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> setCaptioningEnabled(
          _i2.SetCaptioningEnabledRequest? request) =>
      (super.noSuchMethod(Invocation.method(#setCaptioningEnabled, [request]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> setRepeatMode(_i2.SetRepeatModeRequest? request) =>
      (super.noSuchMethod(Invocation.method(#setRepeatMode, [request]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> setShuffleMode(_i2.SetShuffleModeRequest? request) =>
      (super.noSuchMethod(Invocation.method(#setShuffleMode, [request]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> seekBackward(_i2.SeekBackwardRequest? request) =>
      (super.noSuchMethod(Invocation.method(#seekBackward, [request]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> seekForward(_i2.SeekForwardRequest? request) =>
      (super.noSuchMethod(Invocation.method(#seekForward, [request]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> setSpeed(_i2.SetSpeedRequest? request) =>
      (super.noSuchMethod(Invocation.method(#setSpeed, [request]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<dynamic> customAction(_i2.CustomActionRequest? request) =>
      (super.noSuchMethod(Invocation.method(#customAction, [request]),
          returnValue: Future<dynamic>.value()) as _i3.Future<dynamic>);
  @override
  _i3.Future<void> onTaskRemoved(_i2.OnTaskRemovedRequest? request) =>
      (super.noSuchMethod(Invocation.method(#onTaskRemoved, [request]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> onNotificationDeleted(
          _i2.OnNotificationDeletedRequest? request) =>
      (super.noSuchMethod(Invocation.method(#onNotificationDeleted, [request]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> onNotificationClicked(
          _i2.OnNotificationClickedRequest? request) =>
      (super.noSuchMethod(Invocation.method(#onNotificationClicked, [request]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<_i2.GetChildrenResponse> getChildren(
          _i2.GetChildrenRequest? request) =>
      (super.noSuchMethod(Invocation.method(#getChildren, [request]),
              returnValue: Future<_i2.GetChildrenResponse>.value(
                  _FakeGetChildrenResponse()))
          as _i3.Future<_i2.GetChildrenResponse>);
  @override
  _i3.Future<_i2.GetMediaItemResponse> getMediaItem(
          _i2.GetMediaItemRequest? request) =>
      (super.noSuchMethod(Invocation.method(#getMediaItem, [request]),
              returnValue: Future<_i2.GetMediaItemResponse>.value(
                  _FakeGetMediaItemResponse()))
          as _i3.Future<_i2.GetMediaItemResponse>);
  @override
  _i3.Future<_i2.SearchResponse> search(_i2.SearchRequest? request) =>
      (super.noSuchMethod(Invocation.method(#search, [request]),
              returnValue:
                  Future<_i2.SearchResponse>.value(_FakeSearchResponse()))
          as _i3.Future<_i2.SearchResponse>);
  @override
  _i3.Future<void> androidSetRemoteVolume(
          _i2.AndroidSetRemoteVolumeRequest? request) =>
      (super.noSuchMethod(Invocation.method(#androidSetRemoteVolume, [request]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> androidAdjustRemoteVolume(
          _i2.AndroidAdjustRemoteVolumeRequest? request) =>
      (super.noSuchMethod(
          Invocation.method(#androidAdjustRemoteVolume, [request]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
}
